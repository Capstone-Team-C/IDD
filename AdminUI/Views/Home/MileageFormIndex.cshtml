@using Common.Models
@model HomeModel
@{
    ViewData["Title"] = "Home Page";

    //used for zebra print table
    var color = "#8FDDE6";
}
<link rel="manifest" href="~/manifest.json">
<!-- Note: Avoid using inline styles as much as possible. Instead, use classes or ids & .css files -->

@if (Model.Warning)
{
    <div class="alert alert-danger" style="text-align:center"><h1>Fewer than 3 Pay Periods remaining in database! Ask an Administrator to add more.</h1></div>
}
<div class ="text-center">
    <div class="leftnav">
        <p>Saved filters</p>
        @Html.ActionLink("Submitted by Mickey Mouse", "Index", new {pname = "Mickey Mouse", dateFrom = "1990-01-01", dateTo = DateTime.Now.ToString("yyyy-MM-dd"), status="all"})
        @Html.ActionLink("Submitted since 4/2/2020", "Index", new {datefrom = "2020-04-02", dateTo = DateTime.Now.ToString("yyyy-MM-dd"), status = "all"})
        @Html.ActionLink("All unprocessed Submissions", "Index", new {dateFrom = "1990-01-01", dateTo=DateTime.Now.ToString("yyyy-MM-dd"), status="pending"})
    </div>
</div>
<div class="main">
<div class="text-center" 
     style="background-color: var(--light-grey); width: 100%; margin-top: 0; padding-top: 25px; padding-bottom: 25px;
                                      left: 0; border-radius: 10px;">
<div class="container-fluid">
    <form>
        <div class="row text-right">
            <div class="col-md-3">
                <label for="pName">Provider Name:</label>
                <input type="text" name="pName" id="pName" value="@Model.PName">
            </div>

            <div class="col-md-3">
                <label for="cName">Client Name:</label>
                <input type="text" name="cName" id="cName" value="@Model.CName">
            </div>
            <div class="col-md-3">
                <label for="dateFrom">From:</label>
                <input type="date" name="dateFrom" id="dateFrom" value="@Model.DateFrom" required>
            </div>
            <div class="col-md-3">
                <label for="status">Status:</label>
                <select name="status" id="status">
                    <option value="all" selected=@(Model.Status.Equals("all", StringComparison.CurrentCultureIgnoreCase))>All</option>
                    <option value="pending" selected=@(Model.Status.Equals("pending", StringComparison.CurrentCultureIgnoreCase))>Pending</option>
                    <option value="approved" selected=@(Model.Status.Equals("approved", StringComparison.CurrentCultureIgnoreCase))>Approved</option>
                    <option value="rejected" selected=@(Model.Status.Equals("rejected", StringComparison.CurrentCultureIgnoreCase))>Rejected</option>
                </select>
            </div>
        </div>
        <div class="row text-right">
            <div class="col-md-3">
                <label for="pName">Provider ID:</label>
                <input type="text" name="ProviderId" id="ProviderId" value="@Model.ProviderId">
            </div>
            <div class="col-md-3">
                <label for="prime">Client Prime:</label>
                <input type="text" name="prime" id="prime" value="@Model.Prime">
            </div>
            <div class="col-md-3">
                <label for="dateTo">To:</label>
                <input type="date" name="dateTo" id="dateTo" value="@Model.DateTo" required><br/>
            </div>
            <div class="col-md-3">
                <label for="formType">Form Type:</label>
                <select name="formType" id="formType">
                    <option value="timesheet">Timesheet</option>
                    <option value="mileageForm" selected>Mileage</option>
                </select>
            </div>
        </div>
        <br/>
        <input type="hidden" name="perPage" value =@Model.PerPage>
        <input type="hidden" name="sortOrder" value =@Model.SortOrder>
        <input role="button" class="btn btn-info" type="submit" value="Apply Filters"/>
        @Html.ActionLink("Download CSV", "DownloadCSV", new
        {
            formType = Model.FormType,
            pname = Model.PName,
            providerId = Model.ProviderId,
            prime = Model.Prime,
            cname = Model.CName,
            datefrom = Model.DateFrom,
            dateto = Model.DateTo,
            status = Model.Status
        }, new
        {
            @class = "btn btn-secondary "
        })
        @Html.ActionLink("Download PDFs", "DownloadPDFs", new
        {
            formType = Model.FormType,
            pname = Model.PName,
            providerId = Model.ProviderId,
            prime = Model.Prime,
            cname = Model.CName,
            datefrom = Model.DateFrom,
            dateto = Model.DateTo,
            status = Model.Status
        }, new
        {
            @class = "btn btn-dark"
        })
        <br/><br/>
    </form>
</div>


<dir id="check-the-css-file">
<table width="100%">
<thead>
<tr class="color-div" style="background-color: #0294B5">
    <!--This ugly block of code can probably be fixed, but I'm not sure how tbh. Right now each 
    HTML ActionLink sorts the data in the table and having 2 sets for each column allows the 
    user to toggle back and forth between descending and ascending-->

    <th>@Html.ActionLink("ID", "Index", new
        {
            sortOrder = @Model.SortOrder.Equals("id", StringComparison.CurrentCultureIgnoreCase) ? "id_desc" : "id",
            formType = Model.FormType,
            pname = Model.PName,
            prime = Model.Prime,
            cname = Model.CName,
            datefrom = Model.DateFrom,
            dateto = Model.DateTo,
            status = Model.Status,
            page = Model.Page,
            perPage = Model.PerPage

        })</th>

    <th>@Html.ActionLink("Provider Name", "Index", new
        {
            sortOrder = @Model.SortOrder.Equals("pname", StringComparison.CurrentCultureIgnoreCase) ? "pname_desc" : "pname",
            formType = Model.FormType,
            pname = Model.PName,
            prime = Model.Prime,
            cname = Model.CName,
            datefrom = Model.DateFrom,
            dateto = Model.DateTo,
            status = Model.Status,
            page = Model.Page,
            perPage = Model.PerPage

        })</th>
    <th>@Html.ActionLink("Provider ID", "Index", new
        {
            sortOrder = @Model.SortOrder.Equals("ProviderId", StringComparison.CurrentCultureIgnoreCase) ? "ProviderId_desc" : "ProviderId",
            formType = Model.FormType,
            pname = Model.PName,
            prime = Model.Prime,
            cname = Model.CName,
            datefrom = Model.DateFrom,
            dateto = Model.DateTo,
            status = Model.Status,
            page = Model.Page,
            perPage = Model.PerPage
        })</th>

    <th>@Html.ActionLink("Client Name", "Index", new
        {
            sortOrder = @Model.SortOrder.Equals("cname", StringComparison.CurrentCultureIgnoreCase) ? "cname_desc" : "cname",
            formType = Model.FormType,
            pname = Model.PName,
            prime = Model.Prime,
            cname = Model.CName,
            datefrom = Model.DateFrom,
            dateto = Model.DateTo,
            status = Model.Status,
            page = Model.Page,
            perPage = Model.PerPage
        })</th>
    <th>@Html.ActionLink("Client Prime", "Index", new
        {
            sortOrder = @Model.SortOrder.Equals("prime", StringComparison.CurrentCultureIgnoreCase) ? "prime_desc" : "prime",
            formType = Model.FormType,
            pname = Model.PName,
            prime = Model.Prime,
            cname = Model.CName,
            datefrom = Model.DateFrom,
            dateto = Model.DateTo,
            status = Model.Status,
            page = Model.Page,
            perPage = Model.PerPage
        })</th>
    <th>Total Miles</th>
    <th>@Html.ActionLink("Date Submitted", "Index", new
        {
            sortOrder = @Model.SortOrder.Equals("date", StringComparison.CurrentCultureIgnoreCase) ? "date_desc" : "date",
            formType = Model.FormType,
            pname = Model.PName,
            prime = Model.Prime,
            cname = Model.CName,
            datefrom = Model.DateFrom,
            dateto = Model.DateTo,
            status = Model.Status,
            page = Model.Page,
            perPage = Model.PerPage
        })</th>
    <th>Lock Status</th>
    <th>Edited (Y/N)</th>
</tr>
</thead>
<tfoot>
<tr>
    <td colspan="7">
        <div class="row justify-content-end">
            <div class="col-md-auto text-right">Total entries matching query: @Model.TotalSubmissions</div>
            <div class="col-md-auto text-right">Page @Model.Page of @Model.TotalPages</div>
            <div class="col-md-auto">
                <nav aria-label="Page navigation example">
                    <ul class="pagination pagination-sm">
                        @if (Model.Page > 1)
                        {
                            <li class="page-item">@Html.ActionLink("First", "Index", new
                                                  {
                                                      sortOrder = Model.SortOrder,
                                                      formType = Model.FormType,
                                                      pname = Model.PName,
                                                      prime = Model.Prime,
                                                      cname = Model.CName,
                                                      datefrom = Model.DateFrom,
                                                      dateto = Model.DateTo,
                                                      status = Model.Status,
                                                      page = 1,
                                                      perPage = Model.PerPage
                                                  }, new {@class = "page-link"})
                            </li>
                            <li class="page-item">@Html.ActionLink("<", "Index", new
                                                  {
                                                      sortOrder = Model.SortOrder,
                                                      formType = Model.FormType,
                                                      pname = Model.PName,
                                                      prime = Model.Prime,
                                                      cname = Model.CName,
                                                      datefrom = Model.DateFrom,
                                                      dateto = Model.DateTo,
                                                      status = Model.Status,
                                                      page = Model.Page - 1,
                                                      perPage = Model.PerPage
                                                  }, new {@class = "page-link"})
                            </li>
                            <li class="page-item">@Html.ActionLink((@Model.Page - 1).ToString(), "Index", new
                                                  {
                                                      sortOrder = Model.SortOrder,
                                                      formType = Model.FormType,
                                                      pname = Model.PName,
                                                      prime = Model.Prime,
                                                      cname = Model.CName,
                                                      datefrom = Model.DateFrom,
                                                      dateto = Model.DateTo,
                                                      status = Model.Status,
                                                      page = Model.Page - 1,
                                                      perPage = Model.PerPage
                                                  }, new {@class = "page-link"})
                            </li>
                        }
                        <li class="page-item active">@Html.ActionLink(@Model.Page.ToString(), "Index", new
                                                     {
                                                         sortOrder = Model.SortOrder,
                                                         formType = Model.FormType,
                                                         pname = Model.PName,
                                                         prime = Model.Prime,
                                                         cname = Model.CName,
                                                         datefrom = Model.DateFrom,
                                                         dateto = Model.DateTo,
                                                         status = Model.Status,
                                                         page = Model.Page,
                                                         perPage = Model.PerPage
                                                     }, new {@class = "page-link"})
                        </li>
                        @if (Model.Page < Model.TotalPages)
                        {
                            <li class="page-item">@Html.ActionLink((@Model.Page + 1).ToString(), "Index", new
                                                  {
                                                      sortOrder = Model.SortOrder,
                                                      formType = Model.FormType,
                                                      pname = Model.PName,
                                                      prime = Model.Prime,
                                                      cname = Model.CName,
                                                      datefrom = Model.DateFrom,
                                                      dateto = Model.DateTo,
                                                      status = Model.Status,
                                                      page = Model.Page + 1,
                                                      perPage = Model.PerPage
                                                  }, new {@class = "page-link"})
                            </li>
                            <li class="page-item">@Html.ActionLink(">", "Index", new
                                                  {
                                                      sortOrder = Model.SortOrder,
                                                      formType = Model.FormType,
                                                      pname = Model.PName,
                                                      prime = Model.Prime,
                                                      cname = Model.CName,
                                                      datefrom = Model.DateFrom,
                                                      dateto = Model.DateTo,
                                                      status = Model.Status,
                                                      page = Model.Page + 1,
                                                      perPage = Model.PerPage
                                                  }, new {@class = "page-link"})
                            </li>
                            <li class="page-item">@Html.ActionLink("Last", "Index", new
                                                  {
                                                      sortOrder = Model.SortOrder,
                                                      formType = Model.FormType,
                                                      pname = Model.PName,
                                                      prime = Model.Prime,
                                                      cname = Model.CName,
                                                      datefrom = Model.DateFrom,
                                                      dateto = Model.DateTo,
                                                      status = Model.Status,
                                                      page = Model.TotalPages,
                                                      perPage = Model.PerPage
                                                  }, new {@class = "page-link"})
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    </td>
</tr>
</tfoot>
<tbody>
@foreach (MileageForm m in Model.Submissions)
{
    //I guess this is how you do zebra print tables in CSHTML? n-thchild CSS doesn't work in IE
    color = color == "#8FDDE6" ? "#E6EFF3" : "#8FDDE6";
    <tr class="color-div" style="background-color: @color">
        <td><a data-toggle="modal" data-target="#@("sheet" + m.Id)" asp-controller="Submission" asp-action="Index" asp-route-id="@m.Id">@m.Id</a></td>
        <td><a data-toggle="modal" data-target="#@("sheet" + m.Id)" asp-controller="Submission" asp-action="Index" asp-route-id="@m.Id">@m.ProviderName</a></td>
        <td><a data-toggle="modal" data-target="#@("sheet" + m.Id)" asp-controller="Submission" asp-action="Index" asp-route-id="@m.Id">@m.ProviderId</a></td>
        <td><a data-toggle="modal" data-target="#@("sheet" + m.Id)" asp-controller="Submission" asp-action="Index" asp-route-id="@m.Id">@m.ClientName</a></td>
        <td><a data-toggle="modal" data-target="#@("sheet" + m.Id)" asp-controller="Submission" asp-action="Index" asp-route-id="@m.Id">@m.ClientPrime</a></td>
        <td><a data-toggle="modal" data-target="#@("sheet" + m.Id)" asp-controller="Submission" asp-action="Index" asp-route-id="@m.Id">@m.TotalMiles</a></td>
        <td><a data-toggle="modal" data-target="#@("sheet" + m.Id)" asp-controller="Submission" asp-action="Index" asp-route-id="@m.Id">@m.Submitted</a></td>
        @if (m.LockInfo == null)
        {
            <td><a data-toggle="modal" data-target="#@("sheet" + m.Id)" asp-controller="Submission" asp-action="Index" asp-route-id="@m.Id">           </a></td>
        }
        else if (m.LockInfo.User.Equals(User.Identity.Name))
        {
            <td class="table-success"><a data-toggle="modal" data-target="#@("sheet" + m.Id)" asp-controller="Submission" asp-action="Index" asp-route-id="@m.Id">@m.LockInfo.User</a></td>
        }
        else
        {
            <td class="table-danger"><a data-toggle="modal" data-target="#@("sheet" + m.Id)" asp-controller="Submission" asp-action="Index" asp-route-id="@m.Id">@m.LockInfo.User</a></td>
        }
        @if (m.Edited)
        { 
             <td class="table-warning"><a data-toggle="modal" data-target="#@("sheet" + m.Id)" asp-controller="Submission" asp-action="Index" asp-route-id="@m.Id">Y</a></td>
        }
        else 
        {
             <td class="table-success"><a data-toggle="modal" data-target="#@("sheet" + m.Id)" asp-controller="Submission" asp-action="Index" asp-route-id="@m.Id">N</a></td>
        }
    </tr>
    <div class="modal fade" id="@("sheet" + m.Id)" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">@m.ProviderName
                        (<span class="providerId" title="Provider Id">@m.ProviderId</span>)<button class="btn btn-default leftMargin4px" onclick="copyProviderId(this)" title="Copies the Provider's Id">Copy</button>
                    </h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="flex-container column">
                        <div class="row">
                            <div class="column">
                                <label asp-for="Status">Status:</label> @(string.IsNullOrEmpty(m.UserActivity) ? "Pending" : m.UserActivity)
                            </div>
                        </div>
                        <div class="row">
                            <div class="column">
                                <label>Client Name:</label> @m.ClientName
                            </div>
                            <div class="column">
                                <label>Client Prime:</label> @m.ClientPrime
                            </div>
                        </div>
                        <div class="row">
                            <div class="column">
                                <label>Total Miles:</label> @m.TotalMiles
                            </div>
                            <div class="column">
                                <label>Submitted on:</label> @m.Submitted.ToString("MM-dd-yyyy")
                            </div>
                        </div>
                        <div class="table">
                            <div class="row" style="background-color: #0294B5">
                                <div class="col-2"><b>Date</b></div>
                                <div class="col-1"><b>Miles</b></div>
                                <div class="col-1"><b>Group?</b></div>
                                <div class="col-8"><b>Purpose of Trip</b></div>
                            </div>
                            @{
                                var modalColor = "#8FDDE6";
                                foreach (var e in m.MileageEntries)
                                {
                                    modalColor = modalColor == "#8FDDE6" ? "#E6EFF3" : "#8FDDE6";
                                    <div class="row" style="background-color: @modalColor">
                                        <div class="col-2">@e.Date.ToString("d")</div>
                                        <div class="col-1">@e.Miles</div>
                                        <div class="col-1">@(e.Group ? "Yes" : "No")</div>
                                        <div class="col-8">@e.PurposeOfTrip</div>
                                    </div>
                                }
                            }

                        </div>
                    </div>
                </div>
                <div class="modal-footer @("modal-footer" + @m.Id)">
                    <form asp-controller="Submission" asp-action="ModalProcess">
                        <a class="btn btn-secondary" asp-controller="Submission" asp-action="Index" asp-route-id="@m.Id">More Details</a>
                        <input type="hidden" name="id" value="@m.Id"/>
                        <input class="btn btn-primary" name="Status" value="Approved" type="submit">
                        <input class="btn btn-danger" name="Status" value="Rejected" type="submit">
                        <input type="text" name="RejectionReason" placeholder="Rejection Reason"/>
                    </form>
                </div>
            </div>
        </div>
    </div>
}
</tbody>
</table>
@if (Model.Submissions.Count == 0)
{
    <br/>
    <p>No Submissions found matching parameters</p>
}
</dir>
</div>
</div>
<text>
    <script src="~/lib/jquery/dist/jquery.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        function copyProviderId(element) {
            var msg = $(element).closest("h5").find("span.providerId").text();
            console.log($(element).closest("h5"));
            try {
                navigator.clipboard.writeText(msg);
                console.log('Page URL copied to clipboard');
            } catch (err) {
                console.error('Failed to copy: ', err);
            }
        }
        var submission_Ids = [];
        @foreach (var s in Model.Submissions)
        {
            @:submission_Ids.push("@s.Id");
        }
        var i;
        for (i = 0; i < submission_Ids.length; i++) {
            (function (x) {
                $(document).ready(function () {
                    //On open (shown.bs.modal), 
                    //if lock exists, disable processing and indicate sheet is locked
                    //else no lock, create lock.
                    $('#sheet' + x).on('show.bs.modal', function () {
                        //data returns true if the current user holds the lock to the sheet
                        //TODO: get this to return a string and display who holds the lock
                        $.get("/Home/GetLockInfo", { id: x }, function (data) {
                            if (!data) {
                                $(".modal-footer" + x).html('<div class="alert alert-danger"><b>Someone is already reviewing this submission.</b></div>');
                            }
                        });
                    });
                    //On close (hide.bs.modal), if the user held the lock, then remove the lock from table.
                    $('#sheet' + x).on('hide.bs.modal', function () {
                        $.get("/Home/ReleaseLock", { id: x }, function () {});
                    });

                });
            })(submission_Ids[i]);
        }
    </script>
</text>

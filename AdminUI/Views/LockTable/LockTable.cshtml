@model LockTableModel
@{
    ViewData["Title"] = "Lock Table";

    //used for zebra print table
    var color = "#8FDDE6";
}
<div class="text-center" 
     style="background-color: var(--light-grey); width: 100%; margin-top: 0; padding-top: 25px; padding-bottom: 25px;
                                      left: 0; border-radius: 10px;">

<dir id="check-the-css-file">
<table width="100%">
<thead>
<tr class="color-div" style="background-color: #0294B5">
    <!--This ugly block of code can probably be fixed, but I'm not sure how tbh. Right now each 
    HTML ActionLink sorts the data in the table and having 2 sets for each column allows the 
    user to toggle back and forth between descending and ascending-->

    <th>@Html.ActionLink("ID", "LockTable", new
        {
            sortOrder = @Model.SortOrder.Equals("id", StringComparison.CurrentCultureIgnoreCase) ? "id_desc" : "id",
            page = Model.Page,
            perPage = Model.PerPage

        })</th>

    <th>@Html.ActionLink("Provider Name", "LockTable", new
        {
            sortOrder = @Model.SortOrder.Equals("pname", StringComparison.CurrentCultureIgnoreCase) ? "pname_desc" : "pname",
            page = Model.Page,
            perPage = Model.PerPage

        })</th>
    <th>@Html.ActionLink("Provider ID", "LockTable", new
        {
            sortOrder = @Model.SortOrder.Equals("ProviderId", StringComparison.CurrentCultureIgnoreCase) ? "ProviderId_desc" : "ProviderId",
            page = Model.Page,
            perPage = Model.PerPage
        })</th>

    <th>@Html.ActionLink("Client Name", "LockTable", new
        {
            sortOrder = @Model.SortOrder.Equals("cname", StringComparison.CurrentCultureIgnoreCase) ? "cname_desc" : "cname",
            page = Model.Page,
            perPage = Model.PerPage
        })</th>
    <th>@Html.ActionLink("Client Prime", "LockTable", new
        {
            sortOrder = @Model.SortOrder.Equals("prime", StringComparison.CurrentCultureIgnoreCase) ? "prime_desc" : "prime",
            page = Model.Page,
            perPage = Model.PerPage
        })</th>
    <th>@Html.ActionLink("Date Submitted", "LockTable", new
        {
            sortOrder = @Model.SortOrder.Equals("date", StringComparison.CurrentCultureIgnoreCase) ? "date_desc" : "date",
            page = Model.Page,
            perPage = Model.PerPage
        })</th>
    <th>@Html.ActionLink("Locked By", "LockTable", new
        {
            sortOrder = @Model.SortOrder.Equals("lockedby", StringComparison.CurrentCultureIgnoreCase) ? "lockedby_desc" : "lockedby",
            page = Model.Page,
            perPage = Model.PerPage
        })</th>
    <th>@Html.ActionLink("Last Activity", "LockTable", new
        {
            sortOrder = @Model.SortOrder.Equals("lastactivity", StringComparison.CurrentCultureIgnoreCase) ? "lastactivity_desc" : "lastactivity",
            page = Model.Page,
            perPage = Model.PerPage
        })</th>
    <th>Release Lock</th>
</tr>
</thead>
<tfoot>
<tr>
    <td colspan="12">
        <div class="row justify-content-end">
            <div class="col-md-auto text-right">Total entries matching query: @Model.TotalSubmissions</div>
            <div class="col-md-auto text-right">Page @Model.Page of @Model.TotalPages</div>
            <div class="col-md-auto">
                <nav aria-label="Page navigation example">
                    <ul class="pagination pagination-sm">
                        @if (Model.Page > 1)
                        {
                            <li class="page-item">@Html.ActionLink("First", "LockTable", new
                                                  {
                                                      sortOrder = Model.SortOrder,
                                                      page = 1,
                                                      perPage = Model.PerPage
                                                  }, new {@class = "page-link"})
                            </li>
                            <li class="page-item">@Html.ActionLink("<", "LockTable", new
                                                  {
                                                      sortOrder = Model.SortOrder,
                                                      page = Model.Page - 1,
                                                      perPage = Model.PerPage
                                                  }, new {@class = "page-link"})
                            </li>
                            <li class="page-item">@Html.ActionLink((@Model.Page - 1).ToString(), "LockTable", new
                                                  {
                                                      sortOrder = Model.SortOrder,
                                                      page = Model.Page - 1,
                                                      perPage = Model.PerPage
                                                  }, new {@class = "page-link"})
                            </li>
                        }
                        <li class="page-item active">@Html.ActionLink(@Model.Page.ToString(), "LockTable", new
                                                     {
                                                         sortOrder = Model.SortOrder,
                                                         page = Model.Page,
                                                         perPage = Model.PerPage
                                                     }, new {@class = "page-link"})
                        </li>
                        @if (Model.Page < Model.TotalPages)
                        {
                            <li class="page-item">@Html.ActionLink((@Model.Page + 1).ToString(), "LockTable", new
                                                  {
                                                      sortOrder = Model.SortOrder,
                                                      page = Model.Page + 1,
                                                      perPage = Model.PerPage
                                                  }, new {@class = "page-link"})
                            </li>
                            <li class="page-item">@Html.ActionLink(">", "LockTable", new
                                                  {
                                                      sortOrder = Model.SortOrder,
                                                      page = Model.Page + 1,
                                                      perPage = Model.PerPage
                                                  }, new {@class = "page-link"})
                            </li>
                            <li class="page-item">@Html.ActionLink("Last", "LockTable", new
                                                  {
                                                      sortOrder = Model.SortOrder,
                                                      page = Model.TotalPages,
                                                      perPage = Model.PerPage
                                                  }, new {@class = "page-link"})
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    </td>
</tr>
</tfoot>
<tbody>
@foreach (var t in Model.Submissions)
{
    //I guess this is how you do zebra print tables in CSHTML? n-thchild CSS doesn't work in IE
    color = color == "#8FDDE6" ? "#E6EFF3" : "#8FDDE6";
    <tr class="color-div" style="background-color: @color">
        <td><a data-toggle="modal" data-target="#@("sheet" + t.Id)" asp-controller="Submission" asp-action="Index" asp-route-id="@t.Id">@t.Id</a></td>
        <td><a data-toggle="modal" data-target="#@("sheet" + t.Id)" asp-controller="Submission" asp-action="Index" asp-route-id="@t.Id">@t.ProviderName</a></td>
        <td><a data-toggle="modal" data-target="#@("sheet" + t.Id)" asp-controller="Submission" asp-action="Index" asp-route-id="@t.Id">@t.ProviderId</a></td>
        <td><a data-toggle="modal" data-target="#@("sheet" + t.Id)" asp-controller="Submission" asp-action="Index"  asp-route-id="@t.Id">@t.ClientName</a></td>
        <td><a data-toggle="modal" data-target="#@("sheet" + t.Id)" asp-controller="Submission" asp-action="Index"  asp-route-id="@t.Id">@t.ClientPrime</a></td>
        <td><a data-toggle="modal" data-target="#@("sheet" + t.Id)" asp-controller="Submission" asp-action="Index"  asp-route-id="@t.Id">@t.Submitted</a></td>
        <td><a data-toggle="modal" data-target="#@("sheet" + t.Id)" asp-controller="Submission" asp-action="Index"  asp-route-id="@t.Id">@t.LockInfo.User</a></td>
        <td><a data-toggle="modal" data-target="#@("sheet" + t.Id)" asp-controller="Submission" asp-action="Index"  asp-route-id="@t.Id">@t.LockInfo.LastActivity</a></td>
        <td><form asp-action="ReleaseLock"><input type="hidden" name="id" value="@t.Id"/><input class="btn-warning" value ="Release" type="submit"></form></td>
    </tr>
    <div class="modal fade" id="@("sheet" + t.Id)" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">@t.ProviderName (@t.ProviderId)</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="flex-container column">
                        <div class="row">
                            <div class="column">
                                <label>Status:</label> @(String.IsNullOrEmpty(t.UserActivity) ? "Pending" : t.UserActivity)
                            </div>
                            <div class="column">
                                <label>Submitted on:</label> @t.Submitted.ToString("MM-dd-yyyy")
                            </div>
                        </div>
                        <div class="row">
                            <div class="column">
                                <label>Client Name:</label> @t.ClientName
                            </div>
                            <div class="column">
                                <label>Client Prime:</label> @t.ClientPrime
                            </div>
                        </div>
                        <div class="row">
                            <div class="column">
                                <label>Locked by:</label> @t.LockInfo.User
                            </div>
                            <div class="column">
                                <label>Last Activity:</label> @t.LockInfo.LastActivity
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <form asp-action="ReleaseLock">
                        <a class="btn btn-secondary" asp-controller="Submission" asp-action="Index" asp-route-id="@t.Id">More Details</a>
                        <input type="hidden" name="id" value="@t.Id"/>
                        <input class="btn btn-warning" value="Release Lock" type="submit">
                    </form>
                </div>
            </div>
        </div>
    </div>
}
</tbody>
</table>
@if (Model.Submissions.Count == 0)
{
    <br/>
    <p>No Submissions found matching parameters</p>
}
else
{
    <form asp-action="ReleaseAllLocks">
        <input class="btn btn-warning" value="Release All Locks" type="submit">
    </form>
}
</dir>
</div>
